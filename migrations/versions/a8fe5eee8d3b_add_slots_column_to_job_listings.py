"""Add slots column to job_listings

Revision ID: a8fe5eee8d3b
Revises: 
Create Date: 2025-10-12 23:10:56.209452

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a8fe5eee8d3b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Blok untuk applicants: Dihapus semua operasi drop index/constraint
    with op.batch_alter_table('applicants', schema=None) as batch_op:
        # Operasi alter_column (dipertahankan untuk sinkronisasi TIMESTAMP)
        batch_op.alter_column('created_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        
        # BARIS BERMASALAH YANG DIKOMENTARI/DIHAPUS:
        # batch_op.drop_index(batch_op.f('idx_id_user'))
        # batch_op.drop_constraint(batch_op.f('applicants_ibfk_1'), type_='foreignkey')
        # batch_op.create_foreign_key(None, 'users', ['id_user'], ['id_user'])
    
    # Blok untuk applications: Dihapus semua operasi drop index/constraint
    with op.batch_alter_table('applications', schema=None) as batch_op:
        # Operasi alter_column (dipertahankan)
        batch_op.alter_column('applied_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        
        # BARIS BERMASALAH YANG DIKOMENTARI/DIHAPUS:
        # batch_op.drop_index(batch_op.f('idx_id_applicant'))
        # batch_op.drop_index(batch_op.f('idx_id_job'))
        # batch_op.drop_constraint(batch_op.f('applications_ibfk_1'), type_='foreignkey')
        # batch_op.drop_constraint(batch_op.f('applications_ibfk_2'), type_='foreignkey')
        # batch_op.create_foreign_key(None, 'job_listings', ['id_job'], ['id_job'])
        # batch_op.create_foreign_key(None, 'applicants', ['id_applicant'], ['id_applicant'])

    # Blok untuk companies: Dihapus semua operasi drop index/constraint
    with op.batch_alter_table('companies', schema=None) as batch_op:
        # Operasi alter_column (dipertahankan)
        batch_op.alter_column('created_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
                       
        # BARIS BERMASALAH YANG DIKOMENTARI/DIHAPUS:
        # batch_op.drop_index(batch_op.f('idx_id_user'))
        # batch_op.drop_constraint(batch_op.f('companies_ibfk_1'), type_='foreignkey')
        # batch_op.create_foreign_key(None, 'users', ['id_user'], ['id_user'])

    # Blok untuk job_listings: HANYA PERINTAH add_column yang dipertahankan
    with op.batch_alter_table('job_listings', schema=None) as batch_op:
        # PERINTAH UTAMA: Tambah kolom 'slots'
        batch_op.add_column(sa.Column('slots', sa.Integer(), nullable=False, server_default=sa.text('1'))) # Menambahkan server_default untuk keamanan
        
        # Operasi alter_column (dipertahankan)
        batch_op.alter_column('posted_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
                       
        # BARIS BERMASALAH YANG DIKOMENTARI/DIHAPUS:
        # batch_op.drop_index(batch_op.f('idx_id_company'))
        # batch_op.drop_constraint(batch_op.f('job_listings_ibfk_1'), type_='foreignkey')
        # batch_op.create_foreign_key(None, 'companies', ['id_company'], ['id_company'])

    # Blok untuk users: Dihapus semua operasi drop index/constraint
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Operasi alter_column (dipertahankan)
        batch_op.alter_column('created_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=True,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # PERINTAH YANG DIKOMENTARI/DIHAPUS DI downgrade:
    # Ini harusnya dibiarkan agar downgrade bisa dilakukan, tetapi karena upgrade() bermasalah,
    # kita biarkan saja bagian downgrade yang tidak terkait dengan drop_index/constraint.
    
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('created_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp()'))

    with op.batch_alter_table('job_listings', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.create_foreign_key(batch_op.f('job_listings_ibfk_1'), 'companies', ['id_company'], ['id_company'], ondelete='CASCADE')
        # batch_op.create_index(batch_op.f('idx_id_company'), ['id_company'], unique=False)
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('posted_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp()'))
        batch_op.drop_column('slots') # PERINTAH UTAMA UNTUK DOWNGRADE

    with op.batch_alter_table('companies', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.create_foreign_key(batch_op.f('companies_ibfk_1'), 'users', ['id_user'], ['id_user'], ondelete='CASCADE')
        # batch_op.create_index(batch_op.f('idx_id_user'), ['id_user'], unique=False)
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('created_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp()'))

    with op.batch_alter_table('applications', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.create_foreign_key(batch_op.f('applications_ibfk_2'), 'job_listings', ['id_job'], ['id_job'], ondelete='CASCADE')
        # batch_op.create_foreign_key(batch_op.f('applications_ibfk_1'), 'applicants', ['id_applicant'], ['id_applicant'], ondelete='CASCADE')
        # batch_op.create_index(batch_op.f('idx_id_job'), ['id_job'], unique=False)
        # batch_op.create_index(batch_op.f('idx_id_applicant'), ['id_applicant'], unique=False)
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('applied_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp()'))

    with op.batch_alter_table('applicants', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.create_foreign_key(batch_op.f('applicants_ibfk_1'), 'users', ['id_user'], ['id_user'], ondelete='CASCADE')
        # batch_op.create_index(batch_op.f('idx_id_user'), ['id_user'], unique=False)
        batch_op.alter_column('updated_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('created_at',
                       existing_type=mysql.TIMESTAMP(),
                       nullable=False,
                       existing_server_default=sa.text('current_timestamp()'))

    # ### end Alembic commands ###